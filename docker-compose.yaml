services:
  fastapi:
    container_name: ${FASTAPI_CONTAINER_NAME}
    build:
      context: ./api/
      dockerfile: fastapi.Dockerfile
    tty: true
    restart: unless-stopped
    ports:
      - "${FASTAPI_PORT}:${FASTAPI_PORT}"
    # volumes:
    #   - .api/volume:/code/volume  
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "${FASTAPI_PORT}"]


  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME} 
    image: postgres
    restart: always
    volumes:
      # - ./bdd/db-data/:/var/lib/postgresql/data
      - ./bdd/sql:/docker-entrypoint-initdb.d
    env_file:
      - .env  
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin4_AM-DO-NOT-KEEP-IN-PRODUCTION
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
        - app-network


  vue:
    container_name: ${VITE_CONTAINER_NAME}
    build:
      context: ./front/
      dockerfile: vue.dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${VITE_PORT}:80"
    networks:
      - app-network
    depends_on:
      - fastapi

  kafka:
    image: docker.io/bitnami/kafka
    container_name: ${KAFKA_CONTAINER_NAME}
    ports:
      - "${KAFKA_PORT}:9092"
    volumes:
      - "./kafka/run-init-kafka-topics.sh:/docker-entrypoint-initdb.d/run-init-kafka-topics.sh:ro"
      - "./kafka/init-kafka-topics.sh:/init-kafka-topics.sh:ro"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,DOCKER_INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,DOCKER_INTERNAL://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,DOCKER_INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAMES=PLAINTEXT,DOCKER_INTERNAL
      # Misc
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - app-network



networks:
    app-network:
        driver: bridge

