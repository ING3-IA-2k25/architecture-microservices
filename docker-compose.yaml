services:
  fastapi:
    container_name: ${FASTAPI_CONTAINER_NAME}
    build:
      context: ./api/
      dockerfile: fastapi.Dockerfile
    tty: true
    restart: unless-stopped
    ports:
      - "${FASTAPI_PORT}:${FASTAPI_PORT}"
    # volumes:
    #   - .api/volume:/code/volume  
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - postgres
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "${FASTAPI_PORT}"]


  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME} 
    image: postgres
    restart: always
    volumes:
      # - ./bdd/db-data/:/var/lib/postgresql/data
      - ./bdd/sql:/docker-entrypoint-initdb.d
    env_file:
      - .env  
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin4_AM-DO-NOT-KEEP-IN-PRODUCTION
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
        - app-network


  vue:
    container_name: ${VITE_CONTAINER_NAME}
    build:
      context: ./front/
      dockerfile: vue.dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${VITE_PORT}:80"
    networks:
      - app-network
    depends_on:
      - fastapi

networks:
    app-network:
        driver: bridge
